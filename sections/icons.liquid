<style>
  .scrolling-container {
    overflow: hidden;
    position: relative;
    width: 100%;
    padding: 1rem 0;
    /* display: grid; */ /* Can often be removed or changed to display: block */
  }

  .scrolling-track { /* New class for the element that will be animated */
    display: flex;
    width: max-content; /* Ensures it's wide enough for both duplicated sets */
  }

  .icons-wrapper { /* This is for one set of icons */
    display: flex;
    align-items: center;
    /* position: relative; */ /* May not be needed if icon-block handles its own positioning */
    width: max-content; /* Ensures each set of icons takes up its natural width */
  }

  .scroll-animation { /* This class will be on .scrolling-track */
    animation: scroll-left {{ section.settings.scroll_speed }}s linear infinite;
    will-change: transform;
  }

  .icon-block {
    flex: 0 0 auto;
    padding: 0 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 80px;
    width: calc(100% / {{ section.settings.cols_desk }});
    max-width: 250px;
  }

  .icon-block img {
    height: auto;
    width: auto;
    max-height: 100%;
    max-width: 100%;
    object-fit: contain;
  }

  @keyframes scroll-left {
    0% {
      transform: translateX(0);
    }
    100% {
      /* This moves the .scrolling-track by half its width, which is one full set of icons */
      transform: translateX(calc(-100% / 2));
    }
  }

  /* Media queries */
  @media screen and (max-width: 767px) {
    .scroll-animation {
      animation-duration: {{ section.settings.scroll_speed_mobile }}s;
    }
    .icon-block {
      padding: 0 1.5rem;
      height: 60px;
      width: calc(100% / {{ section.settings.cols_mob }});
      max-width: 125px;
    }
  }
</style>

{%- comment -%}
  Only initialize the slider if there are blocks
{%- endcomment -%}
{%- assign icon_count = section.blocks.size -%}
{%- if icon_count > 0 -%}
  <div
    class="scrolling-container"
    data-speed="{{ section.settings.scroll_speed }}"
    data-mobile-speed="{{ section.settings.scroll_speed_mobile }}"
  >
    {%- comment -%}
      Capture the HTML for a single set of icons.
      The .icons-wrapper no longer has .scroll-animation directly.
    {%- endcomment -%}
    {%- capture icons_set_html -%}
      <div class="icons-wrapper">
        {%- for block in section.blocks -%}
          <div class="icon-block" {{ block.shopify_attributes }}>
            {%- if block.settings.image != blank -%}
              {% assign image_to_use = block.settings.image %}
              {% if block.settings.image_mobile != blank and request.device.mobile? %}
                {% assign image_to_use = block.settings.image_mobile %}
              {% endif %}
              <img
                src="{{ image_to_use | image_url: width: 200 }}"
                loading="lazy"
                style="width: {{ block.settings.image_width }}%;"
                alt="{{ image_to_use.alt | escape }}"
              >
            {%- endif -%}
          </div>
        {%- endfor -%}
      </div>
    {%- endcapture -%}

    {%- comment -%}
      Create a track element that holds two copies of the icons_set_html.
      This .scrolling-track element gets the .scroll-animation class.
    {%- endcomment -%}
    <div class="scrolling-track scroll-animation">
      {{ icons_set_html }}
      {{ icons_set_html }}
    </div>
  </div>

  <script>
    // return; // Remove this line to enable the script

    // Prevent animation jumps by resetting when needed
    document.addEventListener('DOMContentLoaded', function () {
      // Select the element that has the animation, which is now .scrolling-track
      const animatedTrack = document.querySelector('.scrolling-track.scroll-animation');
      if (!animatedTrack) return;

      // Function to reset animation
      function resetAnimation() {
        animatedTrack.classList.remove('scroll-animation');
        void animatedTrack.offsetWidth; // Force reflow
        animatedTrack.classList.add('scroll-animation');
      }

      // Reset animation when it iterates.
      // With a correctly set up continuous animation, this might not always be necessary,
      // but can help with browser quirks or ensure perfect synchronization.
      animatedTrack.addEventListener('animationiteration', function () {
        resetAnimation();
      });

      // Adjust for window resize
      let resizeTimer;
      window.addEventListener('resize', function () {
        clearTimeout(resizeTimer);
        // Resetting on resize can help if widths change and the animation needs to readjust.
        resizeTimer = setTimeout(resetAnimation, 100);
      });
    });
  </script>
{%- endif -%}

{% schema %}
{
  "name": "Scrolling Icons",
  "tag": "section",
  "class": "section-scrolling-icons",
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "cols_desk",
      "min": 2,
      "max": 6,
      "step": 1,
      "unit": "col",
      "label": "Desktop columns",
      "default": 4
    },
    {
      "type": "range",
      "id": "cols_mob",
      "min": 1,
      "max": 3,
      "step": 1,
      "unit": "col",
      "label": "Mobile columns",
      "default": 2
    },
    {
      "type": "header",
      "content": "Animation"
    },
    {
      "type": "range",
      "id": "scroll_speed",
      "min": 10,
      "max": 120,
      "step": 5,
      "unit": "s",
      "label": "Scroll speed (desktop)",
      "default": 40,
      "info": "Higher values = slower scrolling"
    },
    {
      "type": "range",
      "id": "scroll_speed_mobile",
      "min": 10,
      "max": 120,
      "step": 5,
      "unit": "s",
      "label": "Scroll speed (mobile)",
      "default": 30,
      "info": "Higher values = slower scrolling"
    }
  ],
  "blocks": [
    {
      "name": "Icon",
      "type": "icon",
      "limit": 10,
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "range",
          "id": "image_width",
          "label": "Image width",
          "default": 80,
          "min": 30,
          "max": 100,
          "step": 5,
          "unit": "%"
        },
        {
          "type": "image_picker",
          "id": "image_mobile",
          "label": "Alternative mobile image",
          "info": "Optional. Uses desktop image if none provided."
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Scrolling Icons",
      "blocks": [
        {
          "type": "icon"
        },
        {
          "type": "icon"
        },
        {
          "type": "icon"
        },
        {
          "type": "icon"
        }
      ]
    }
  ]
}
{% endschema %}
