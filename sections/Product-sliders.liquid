{%- assign ss = section.settings -%}

<style>
  .product-page-container {
    display: flex;
    gap: 30px;
    align-items: flex-start;
    padding-top: 50px;
    flex-wrap: wrap;
  }

  button.atcButton {
    border-radius: 10px!important;
  }

  .product-gallery {
    width: 100%;
    display: flex;
    flex-direction: column;
  }

  .product-description {
  padding-top: 20px;
  word-wrap: break-word; /* Break words that are too long */
  overflow-wrap: break-word; /* Ensure long words wrap properly */
  white-space: normal; /* Allow text to wrap to the next line */
  max-width: 100%; /* Prevent overflow beyond the container */
  box-sizing: border-box; /* Include padding in the width calculation */
}


  .product-gallery img {
    width: 100%;
    margin-bottom: 20px;
  }

  .product-gallery .gallery-row {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
  }

  .product-gallery .gallery-row img {
    width: calc(50% - 5px);
  }

  .product-info {
    width: 100%;
    position: relative;
    align-self: flex-start;
  }

  @media (min-width: 768px) {
    .product-page-container {
      flex-wrap: nowrap;
    }

    .product-gallery {
      width: 50%;
    }

    .product-info {
      width: 50%;
    }
  }

  h1 {
    font-size: 70px;
    font-weight: 700;
    line-height: 70px;
    font-family: 'Inter', sans-serif;
  }

  .variant-select label {
    font-weight: 700;
    margin-bottom: 5px;
    padding: 10px 20px;
    color: black;
    border: 1px solid black;
    display: inline-block;
    border-radius: 10px;
    font-family: 'Inter', sans-serif;
  }

  .variant-select input[type="radio"] {
    display: none;
  }

  .variant-select input[type="radio"]:checked + label {
    background-color: black;
    color: white;
  }

  .price {
    margin-block: 30px;
    font-family: 'Inter', sans-serif;
    font-size: 38px;
    line-height: 48px;
    letter-spacing: -1.42px;
    font-weight: 500;
  }

  .add-to-cart {
    padding: 15px 40px 20px;
    text-align: center;
    font-size: 16px;
    line-height: 21px;
    font-weight: 400;
    font-family: 'Inter', sans-serif;
    background: #111111;
    color: white;
    width: fit-content;
    transition: 0.3s;
    letter-spacing: -0.5px;
    display: flex;
    align-items: center;
    gap: 10px;
    border: 10px solid black;
    cursor: pointer;
    border-radius: 20px;
  }

  .hr-line {
    height: 1px;
    width: 100%;
    background-color: rgba(17, 17, 17, 0.1);
    margin-block: 30px;
  }

  .variants-head {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 70%;
    margin-bottom: 10px;
  }

  .size-title {
    font-weight: 700;
    font-family: 'Inter', sans-serif;
  }

  #sizeChart {
    text-align: right;
    font-family: 'Inter', sans-serif;
  }
</style>

<div class="product-page-container" id="shopify-section-{{ section.id }}">
  <div class="product-gallery">
    <img src="{{ product.featured_image | img_url: 'master' }}" alt="{{ product.title }}">
    <div class="gallery-row">
      {% assign images = product.images | slice: 1, product.images.size %}
      {% for image in images %}
        <img src="{{ image | img_url: '300x300' }}" alt="{{ product.title }}">
      {% endfor %}
    </div>
  </div>

  <div class="product-info" id="product-info">
    <h1>{{ product.title }}</h1>
    <div class="price">{{ product.price | money }}</div>

    {%- form 'product', product, is: 'product-form' -%}
      <input type="hidden" name="quantity" value="1">
      <div class="variants-head">
        <div class="size-title">{{ ss.size_title }}</div>
        <div id="sizeChart" class="link">{{ ss.size_text }}</div>
      </div>
      <fieldset class="variant-select">
        {%- for variant in product.variants -%}
          <input type="radio" name="id" id="variant-{{ variant.id }}" value="{{ variant.id }}" {% if product.selected_or_first_available_variant.id == variant.id %}checked{% endif %}>
          <label for="variant-{{ variant.id }}">{{ variant.title }}</label>
        {%- endfor -%}
      </fieldset>
      <div class="hr-line"></div>
      <div class="buttons">
        <button class="button atcButton" type="submit">{{ ss.add_text }}</button>
      </div>
    {%- endform -%}

    <!-- Custom Description -->
    <div class="product-description">
      {{ section.settings.custom_description }}
    </div>

    {% assign tabs = section.blocks | where: 'type', 'tab' %}
    {% if tabs %}
      <div class="tabs-section">
        <div class="tabs-titles">
          {% for tab in tabs %}
            <div data-index="{{ forloop.index }}" class="tab {% if forloop.index == 1 %}active{% endif %} tab-primary">
              {{ tab.settings.title }}
              <div class="glider"></div>
            </div>
          {% endfor %}
        </div>
        <div class="tabs-contents">
          {% for tab in tabs %}
            <div class="item {% if forloop.index == 1 %}active{% endif %}" id="content-{{ forloop.index }}" data-index="{{ forloop.index }}">
              {{ tab.settings.content }}
            </div>
          {% endfor %}
        </div>
      </div>
    {% endif %}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const addToCartButtons = document.querySelectorAll('.add-to-cart');
    addToCartButtons.forEach(button => {
      button.addEventListener('click', function(event) {
        event.preventDefault();
        fetch(button.closest('form').action, {
          method: 'POST',
          body: new FormData(button.closest('form')),
          headers: { 'Accept': 'application/json' }
        }).then(response => response.json())
        .then(data => {
          if (data.status === 200 || data.status === 'ok' || data.id) {
            if (typeof Shopify !== 'undefined' && Shopify.drawer && typeof Shopify.drawer.open === 'function') {
              Shopify.drawer.open();
            } else {
              window.location.href = '/cart';
            }
          }
        }).catch(error => console.error('Error:', error));
      });
    });
  });
  
 document.addEventListener('DOMContentLoaded', function() {
    const faqItems = document.querySelectorAll('.faq-item');
    faqItems.forEach(item => {
      item.addEventListener('click', () => {
        item.classList.toggle('open');
        const content = item.querySelector('.faq-item-content');
        const icon = item.querySelector('.faq-item-icon');
        if (item.classList.contains('open')) {
          content.style.maxHeight = content.scrollHeight + 'px';
          icon.textContent = '-';
        } else {
          content.style.maxHeight = null;
          icon.textContent = '+';
        }
      });
    });
  });
</script>

{% schema %}
{
  "name": "Product2",
  "tag": "section",
  "class": "main-product hero-section",
  "settings": [
    { "type": "image_picker", "id": "image", "label": "Image" },
    { "type": "text", "id": "free_shipping", "label": "Free shipping text" },
    { "type": "text", "id": "review_title", "label": "Reviews title", "default": "Reviews" },
    { "type": "text", "id": "size_title", "label": "Sizes title", "default": "Sizes" },
    { "type": "text", "id": "size_text", "label": "Size chart text", "default": "Size guide" },
    { "type": "url", "id": "size_url", "label": "Size chart link" },
    { "type": "text", "id": "share_text", "label": "Share text", "default": "Share with friends" },
    { "type": "text", "id": "add_text", "label": "Add to cart text", "default": "Add to cart" },
    { "type": "text", "id": "check_text", "label": "Checkout text", "default": "Buy now" },
    { "type": "color", "id": "bg", "label": "Background color", "default": "#e5e5e5" },
    { "type": "richtext", "id": "custom_description", "label": "Custom Description", "default": "<p>Write your custom description here.</p>" }
  ],
  "blocks": [
    { "type": "@app" },
    {
      "type": "tab",
      "name": "Tab",
      "settings": [
        { "type": "text", "id": "title", "label": "Tab title" },
        { "type": "richtext", "id": "content", "label": "Tab content" }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product",
      "settings": {}
    }
  ]
}
{% endschema %}