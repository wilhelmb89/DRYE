var __defProp=Object.defineProperty;function afterCallstack(callback,delay=0){setTimeout((()=>{requestAnimationFrame(callback)}),delay)}const LOAD_ATTRIBUTES_DOM="data-load-dom",LOAD_ATTRIBUTES_LOAD="data-load-load",LOAD_ATTRIBUTES_MANUAL="data-load-manual",SELECTORS$1_LAZY_MEDIA='[loading="lazy"], [data-src], [data-poster], [data-srcset]',SELECTORS$1_PICTURE="PICTURE";function setMediaAttr(el){el.dataset.src&&!el.src&&(el.src=el.dataset.src),el.dataset.srcset&&!el.srcset&&(el.srcset=el.dataset.srcset),el.dataset.poster&&!el.poster&&(el.poster=el.dataset.poster)}function setMediaSources(media){var _a;if(media)try{(null==(_a=media.parentNode)?void 0:_a.tagName)===SELECTORS$1_PICTURE?Array.from(media.parentNode.children).forEach((el=>{setMediaAttr(el)})):setMediaAttr(media)}catch(error){console.error("[LazyMedia] Error setting media sources:",error)}else console.warn("[LazyMedia] Invalid media element provided")}function setMediaSourceArray(mediaElArray){return mediaElArray.forEach((media=>setMediaSources(media)))}function initLazyMedia(){const mediaOnDOMLoad=[],mediaOnLoad=[],mediaForIntersectionObserver=[];if(document.querySelectorAll(SELECTORS$1_LAZY_MEDIA).forEach((media=>{if(media.hasAttribute(LOAD_ATTRIBUTES_DOM))mediaOnDOMLoad.push(media);else if(media.hasAttribute(LOAD_ATTRIBUTES_LOAD))mediaOnLoad.push(media);else{if(media.hasAttribute(LOAD_ATTRIBUTES_MANUAL))return;"loading"in HTMLImageElement.prototype==!1&&"IntersectionObserver"in window?mediaForIntersectionObserver.push(media):setMediaSources(media)}})),function loadMediaOnDOMLoaded(mediaElArray){const execute=()=>afterCallstack((()=>setMediaSourceArray(mediaElArray)));if("loading"!=document.readyState)return execute();document.addEventListener("DOMContentLoaded",execute)}(mediaOnDOMLoad),function loadMediaOnLoaded(mediaElArray){const execute=()=>afterCallstack((()=>setMediaSourceArray(mediaElArray)));if("complete"==document.readyState)return execute();window.addEventListener("load",execute)}(mediaOnLoad),mediaForIntersectionObserver.length>0){const io=new IntersectionObserver(((entries,observer)=>{entries.forEach((entry=>{if(entry.isIntersecting){const media=entry.target;setMediaSources(media),observer.unobserve(media)}}))}),{rootMargin:"0px 0px 500px 0px"});mediaForIntersectionObserver.forEach((media=>{io.observe(media)}))}}afterCallstack(initLazyMedia),document.addEventListener("DOMContentLoaded",initLazyMedia),document.addEventListener("shopify:section:load",(()=>afterCallstack(initLazyMedia)));const initLazyImages=initLazyMedia,_ReloadOnEvent=class _ReloadOnEvent extends HTMLElement{constructor(){super()}static registerSectionListener(sectionId,event,callback){if(!this.sectionListeners[event]){const listener=document.addEventListener(event,(eventData=>{this.handleEvent(event,eventData)}));this.sectionListeners[event]={listener:listener,sections:{}}}const sectionListener=this.sectionListeners[event];sectionListener.sections[sectionId]||(sectionListener.sections[sectionId]=[]),sectionListener.sections[sectionId].push(callback)}static async handleEvent(event,eventData){var _a;const sectionIds=Object.keys(this.sectionListeners[event].sections),url=new URL(window.location.href);(null==(_a=null==eventData?void 0:eventData.detail)?void 0:_a.variant)&&url.searchParams.set("variant",eventData.detail.variant.id),url.searchParams.set("sections",sectionIds.join(","));const sectionJSON=await this.fetchSectionHTML(url);sectionIds.forEach((sectionId=>{this.sectionListeners[event].sections[sectionId].forEach((callback=>{callback(sectionJSON[sectionId])}))}))}static async fetchSectionHTML(url){return await fetch(url).then((res=>res.json()))}static unregisterSectionListener(sectionId,event){const sectionListener=this.sectionListeners[event];delete sectionListener.sections[sectionId],0===Object.keys(sectionListener.sections).length&&(document.removeEventListener(event,sectionListener.listener),delete this.sectionListeners[event])}connectedCallback(){this.event=this.getAttribute("data-event"),this.id?(this.section=this.closest(".shopify-section"),this.sectionId=this.section.id,this.shopifySectionId=this.sectionId.replace("shopify-section-",""),"false"!==this.dataset.reloadSection&&(this.container=this.section.querySelector("[data-section-type]"),this.container&&(this.sectionType=this.container.getAttribute("data-section-type"))),_ReloadOnEvent.registerSectionListener(this.shopifySectionId,this.event,this.updateSection.bind(this))):console.error("ReloadOnEvent: No id attribute found on element")}disconnectedCallback(){_ReloadOnEvent.unregisterSectionListener(this.sectionId,this.event)}updateSection(html){this.setNewHTML(html),this.container&&this.reloadSection(),afterCallstack((()=>{initLazyImages()}),10),this.dispatchEvent(new CustomEvent("reload-on-event:loaded",{bubbles:!0,detail:{sectionId:this.sectionId,shopifySectionId:this.shopifySectionId}}))}reloadSection(){window.Shopify.theme.sections.unload(this.container);const newContainer=this.section.querySelector(`[data-section-type="${this.sectionType}"]`);newContainer?(this.container=newContainer,window.Shopify.theme.sections.load(this.sectionType,this.container)):console.error(`ReloadOnEvent reload: Failed to find the new container element with type [${this.sectionType}] after updating innerHTML.`)}async setNewHTML(html){try{if(!html)return void console.error("ReloadOnEvent setNewHTML: Fetched HTML is empty or null for section",this.shopifySectionId);const parser=new DOMParser,fetchedSelf=parser.parseFromString(html,"text/html").getElementById(this.id);fetchedSelf||console.error(`ReloadOnEvent: Could not find "self" (<reload-on-event id="${this.id}">) element within the fetched section HTML.`),this.innerHTML=fetchedSelf.innerHTML}catch(error){console.error("ReloadOnEvent setNewHTML: Error fetching or parsing HTML:",error)}}};var key;((obj,key,value)=>{key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value:value}):obj[key]=value})(_ReloadOnEvent,"symbol"!=typeof(key="sectionListeners")?key+"":key,{});let ReloadOnEvent=_ReloadOnEvent;customElements.define("reload-on-event",ReloadOnEvent);const SELECTORS_VIDEO="video",SELECTORS_SOURCES_TEMPLATE="template[data-sources]",SELECTORS_RESPONSIVE_VIDEO_WRAPPER=".responsive-video-wrapper",SELECTORS_POSTER_IMAGE=".poster-image",SELECTORS_SOUND_TOGGLE="[data-sound-toggle]",SELECTORS_ICON_PLAY="[data-icon-play]",SELECTORS_ICON_SOUND_ON="[data-icon-sound-on]",SELECTORS_ICON_SOUND_OFF="[data-icon-sound-off]";class ResponsiveVideo extends HTMLElement{constructor(){super(),this.onClick=this.onClick.bind(this),this.onResize=this.onResize.bind(this),this.onLoaded=this.onLoaded.bind(this)}connectedCallback(){this.lazyType=this.getAttribute("data-lazy-type"),this.initElements(),this.sources=this.getSources(),this.video.style.opacity="0",this.videoWrapper.addEventListener("click",this.onClick),this.video.addEventListener("loadeddata",this.onLoaded),window.addEventListener("resize",this.onResize),this.initVideo()}initVideo(){this.updateSource();const execute=()=>{this.lazyType?(this.video.setAttribute("data-src",this.currentSource),initLazyMedia()):this.load()};this.isVisible()?execute():this.observeVisibility(execute)}isVisible(){const rect=this.getBoundingClientRect();return rect.width>0&&rect.height>0}observeVisibility(callback){const observer=new IntersectionObserver((entries=>{entries.forEach((entry=>{entry.isIntersecting&&this.isVisible()&&(callback(),observer.disconnect())}))}));observer.observe(this)}initElements(){this.video=this.querySelector(SELECTORS_VIDEO),this.sourcesTemplate=this.querySelector(SELECTORS_SOURCES_TEMPLATE),this.video&&(this.poster=this.querySelector(SELECTORS_POSTER_IMAGE),this.videoWrapper=this.querySelector(SELECTORS_RESPONSIVE_VIDEO_WRAPPER),this.soundBtn=this.querySelector(SELECTORS_SOUND_TOGGLE),this.playIcon=this.querySelector(SELECTORS_ICON_PLAY),this.soundOnIcon=this.querySelector(SELECTORS_ICON_SOUND_ON),this.soundOffIcon=this.querySelector(SELECTORS_ICON_SOUND_OFF))}getSources(){return Array.from(this.sourcesTemplate.content.querySelectorAll("source")).map((s=>({src:s.getAttribute("data-src"),media:s.media})))}cleanSourceURL(src){return src.startsWith("//")&&(src=`${window.location.protocol}${src}`),new URL(src,window.location.href).href}updateSource(){const match=this.sources.find((s=>s.media&&matchMedia(s.media).matches)),fallback=this.sources.find((s=>!s.media)),nextSrc=(match||fallback||this.sources[0]).src;if(!nextSrc)return;const newSourceUrl=this.cleanSourceURL(nextSrc);if(this.video.src){if(this.cleanSourceURL(this.video.src)===newSourceUrl)return}this.currentSource=nextSrc}load(){if(this.video.src){const newSourceUrl=this.cleanSourceURL(this.currentSource);if(this.cleanSourceURL(this.video.src)===newSourceUrl)return}this.video.src=this.currentSource}onResize(){clearTimeout(this._resizeTimer),this._resizeTimer=setTimeout((()=>{this.updateSource(),this.load();!this.video.paused&&this.video.play().catch((()=>{}))}),150)}onClick(e){e.target.closest("[data-sound-toggle]")?this.toggleSound():this.togglePlay()}togglePlay(){this.video.paused?this.video.play().catch((()=>{})):this.video.pause(),this.updateControlsUI()}toggleSound(){this.video.muted=!this.video.muted,this.updateControlsUI()}onLoaded(){this.poster&&(this.poster.style.opacity="0"),this.video.style.opacity="1",this.video.hasAttribute("autoplay")&&(this.video.muted=!0,this.video.play().catch((()=>{}))),this.updateControlsUI()}updateControlsUI(){this.playIcon&&this.playIcon.classList.toggle("hidden",!this.video.paused),this.soundOnIcon&&this.soundOffIcon&&(this.soundOnIcon.classList.toggle("hidden",this.video.muted),this.soundOffIcon.classList.toggle("hidden",!this.video.muted))}disconnectedCallback(){var _a;this.removeEventListener("click",this.onClick),null==(_a=this.soundBtn)||_a.removeEventListener("click",this.onSound),this.video.removeEventListener("loadeddata",this.onLoaded),window.removeEventListener("resize",this.onResize)}}customElements.define("responsive-video",ResponsiveVideo),document.addEventListener("DOMContentLoaded",(()=>{document.addEventListener("click",(evt=>{const link="A"===evt.target.tagName?evt.target:evt.target.closest("a");link&&"A"===link.tagName&&window.location.hostname!==new URL(link.href).hostname&&(link.target="_blank")})),document.addEventListener("click",(evt=>{"A"===evt.target.tagName&&window.location.hostname===new URL(evt.target.href).hostname&&evt.target.href.includes("#")&&(document.getElementsByTagName("html")[0].style.scrollBehavior="smooth",setTimeout((()=>{document.getElementsByTagName("html")[0].style.scrollBehavior=""}),1e3))}))})),window.theme=window.theme||{},console.log("main.bundle.js loaded"),document.dispatchEvent(new CustomEvent("theme:loaded")),window.theme.loaded=!0;
//# sourceMappingURL=main.bundle.js.map
