{%- comment -%}
  This file has been modified by the Yoast SEO for Shopify app.
  You can learn more about this (and learn how to cleanly revert these changes) at https://yoa.st/removing-theme-changes.
{%- endcomment -%}
<!doctype html>
<html lang="{{ request.locale.iso_code }}">
  <head>

<style>html.hide-during-redirect { visibility: hidden }</style>
<script>
(function () {
  // --- KONFIGURATION ---
  // Paths utan Shopify Markets-prefix
  var genericPath  = 'products/products-moisture-wicking-glove-liners-for-sensitive-skin';
  var householdPath = 'products/drye-liner-stops-sweat-from-getting-trapped';
  var mechanicPath  = 'products/drye-glove-liner-prevents-sweat-related-irritation';

  // Map entry keys to destination paths
  var entryMap = {
    household: householdPath,
    mechanic: mechanicPath
  };

  // --- HJÄLPFUNKTIONER ---
  function getMarketsPrefix(pathname) {
    var match = pathname.match(/^\/[a-z]{2}-[a-z]{2}\//);
    return match ? match[0] : '/';
  }

  function normalizePath(pathname) {
    return pathname
      .replace(/^\/[a-z]{2}-[a-z]{2}\//, '')  // Ta bort Shopify Markets-prefix
      .replace(/^\/+|\/+$/g, '');             // Ta bort inledande/avslutande snedstreck
  }

  function getEntryPage() {
    try {
      return localStorage.getItem('entryPage') ||
             (document.cookie.match(/(?:^|;\s*)entryPage=(household|mechanic)/) || [])[1];
    } catch (e) {
      return null;
    }
  }

  function setEntryPage(source) {
    try {
      localStorage.setItem('entryPage', source);
      document.cookie = 'entryPage=' + source + '; path=/; max-age=2592000'; // 30 dagar
    } catch (e) {}
  }

  // --- HUVUDLOGIK ---
  var pathname = location.pathname;
  var path = normalizePath(pathname);
  var prefix = getMarketsPrefix(pathname);

  // Sätt entryPage om det är första gången (på household eller mechanic)
  if (path === householdPath) {
    setEntryPage('household');
  } else if (path === mechanicPath) {
    setEntryPage('mechanic');
  }

  var entry = getEntryPage();

  if (path === genericPath && entry && entryMap[entry]) {
    // Användaren kom via household eller mechanic, men är nu på generic → omdirigera
    document.documentElement.classList.add('hide-during-redirect');
    location.href = prefix + entryMap[entry];
  }
})();
</script>




    <meta name="facebook-domain-verification" content="wfm34x1wbceob0aooivridsrxzce09">

    <script>
      var ahrefs_analytics_script = document.createElement('script');
      ahrefs_analytics_script.async = true;
      ahrefs_analytics_script.src = 'https://analytics.ahrefs.com/analytics.js';
      ahrefs_analytics_script.setAttribute('data-key', '8yq3BY/s4aYD+TTCE4sdGQ');
      document.getElementsByTagName('head')[0].appendChild(ahrefs_analytics_script);
    </script>

    <!-- Hotjar Tracking Code for www.drye.se -->
    <script>
      (function (h, o, t, j, a, r) {
        h.hj =
          h.hj ||
          function () {
            (h.hj.q = h.hj.q || []).push(arguments);
          };
        h._hjSettings = { hjid: 5148037, hjsv: 6 };
        a = o.getElementsByTagName('head')[0];
        r = o.createElement('script');
        r.async = 1;
        r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;
        a.appendChild(r);
      })(window, document, 'https://static.hotjar.com/c/hotjar-', '.js?sv=');
   </script>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width,initial-scale=1">
<meta name="theme-color" content="">
{%- if settings.favicon != blank -%}
  <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 128, height: 128 }}">
{%- endif -%}

<link rel="canonical" href="{{ canonical_url }}">

<title>{{ page_title }}</title>

{% if page_description %}
  <meta name="description" content="{{ page_description | escape }}">
{% endif %}

{%- render 'theme-meta' -%}
    <script src="{{ 'swiper-bundle.min.js' | asset_url }}" defer="defer"></script>
    {{ 'swiper-bundle.min.css' | asset_url | stylesheet_tag }}
    {%- render 'theme-head-assets' -%}
    {{ content_for_header }}
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-PZMXP9C');</script>
<!-- End Google Tag Manager -->


    <script type="text/javascript">
      (function (c, l, a, r, i, t, y) {
        c[a] =
          c[a] ||
          function () {
            (c[a].q = c[a].q || []).push(arguments);
          };
        t = l.createElement(r);
        t.async = 1;
        t.src = 'https://www.clarity.ms/tag/' + i;
        y = l.getElementsByTagName(r)[0];
        y.parentNode.insertBefore(t, y);
      })(window, document, 'clarity', 'script', 'r99kaui2gr');
    </script>

    {% if request.path contains '/policies/' %}
      <style>
            .shopify-policy__body {
              max-width: 960px !important;
              margin-left: auto !important;
              margin-right: auto !important;
              padding-left: 64px !important;
              padding-right: 64px !important;
              box-sizing: border-box !important;
              width: 100% !important;
            }

            @media screen and (max-width: 768px) {
              .shopify-policy__body {
                padding-left: 20px !important;
                padding-right: 20px !important;
              }
            }
        .shopify-policy__body ul {
          list-style: disc !important;
          padding-left: 20px !important;
          margin-bottom: 1rem;
          color: #1a1a1a !important;
        }

        .shopify-policy__body li,
        .shopify-policy__body li * {
          font-weight: 200 !important;
          font-style: normal !important;
          color: #1a1a1a !important;
        }


        <style>
          .shopify-policy__body a,
          .rte a,
          .faq .rte a,
          .accordion .rte a,
          .accordion-content a {
            color: #1a0dab !important;
            text-decoration: underline !important;
          }
        </style>
      </style>
    {% endif %}
  </head>
  <body class="{{ page.template_suffix }}__page">

<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PZMXP9C"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
    
    <div id="si-overlay" class="overlay"></div>
    {%- sections 'header-group' -%}
    <main>
      {{ content_for_layout }}
    </main>
    <footer>
      {%- sections 'footer-group' -%}
    </footer>

    {%- sections 'popups-group' -%}
    {%- render 'theme-body-assets' -%}
    {%- render 'theme-variables-script' -%}

    <script>
      document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.submenu-toggle').forEach(function (toggleBtn) {
          toggleBtn.addEventListener('click', function (e) {
            e.preventDefault();
            const parent = this.closest('.mobile-menu-item');
            parent.classList.toggle('active');

            // Toggle +/– symbol
            this.textContent = parent.classList.contains('active') ? '–' : '+';
          });
        });
      });
    </script>

    <!-- Gorgias Chat Widget Start -->
    <script
      id="gorgias-chat-widget-install-v3"
      src="https://config.gorgias.chat/bundle-loader/01JTNG45QZT8DAP1H72K0G5JRM"
    ></script>
    <!-- Gorgias Chat Widget End -->

    <!-- Bundle Start -->
    <script src="https://bundle.dyn-rev.app/loader.js" async></script>
    <!-- Bundle End -->

    <script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.js" defer id="masonry-script"></script>

    <style>
      div#klaviyo-product-reviews-wrapper {
        max-width: 1534px;
        margin: 0 auto;
        padding: 0 64px;
      }

      @media screen and (max-width: 768px) {
        div#klaviyo-product-reviews-wrapper {
          padding: 0 20px;
        }
      }

      .kl_reviews__review_item {
        border: 1px solid #e0e0e0 !important;
        border-radius: 5px;
        transition: box-shadow 0.3s ease-in-out;
        overflow: hidden;
        padding: 20px;
        margin: 0;
      }

      .kl_reviews__review_item:hover {
        box-shadow: 0 5px 11px #e5e5e5;
      }
    </style>
<!-- Stamped -->

<script>function myInit(){ StampedFn.init({
apiKey: '4442485d-59b7-4e2f-8408-907cf26ba3cd',
sId: '353360' }); }</script>


<script async onload="myInit()" type="text/javascript"
src="
https://cdn1.stamped.io/files/widget.min.js
"></script>

<!-- End Stamped --> 
<script>
(function () {
  var eczemaUrl  = '/products/drye-eczema-gloves-for-cracked-and-sensitive-skin';
  var path = location.pathname.replace(/\/+$/,'');
  if (path === eczemaUrl) {
    try {
      localStorage.setItem('entryPage', 'eczema');
      document.cookie = 'entryPage=eczema;path=/;max-age=7200'; // 2h giltighet
    } catch(e){}
  }
})();
</script>



<script>
(function () {
  function getVariantIdFromCustomSelect(form) {
    const cs = form.querySelector('.custom-select');
    if (!cs) return NaN;

    const selectedTitle = cs.querySelector('.selected')?.textContent?.trim();
    if (!selectedTitle) return NaN;

    const opt = Array.from(cs.querySelectorAll('.custom-option')).find(o =>
      (o.dataset?.title?.trim() || o.textContent?.trim()) === selectedTitle
    );
    return Number(opt?.dataset?.value || NaN);
  }

  function resolveVariantId(form) {
    const fromCS = getVariantIdFromCustomSelect(form);
    if (Number.isInteger(fromCS)) return fromCS;

    const radioId = Number(form.querySelector('input[type="radio"][name="id"]:checked')?.value || NaN);
    if (Number.isInteger(radioId)) return radioId;

    const selId = Number(form.querySelector('select[name="id"]')?.value || NaN);
    if (Number.isInteger(selId)) return selId;

    const vr = form.querySelector('variant-radios, variant-selects') ||
               document.querySelector('variant-radios, variant-selects');
    const ceVar = Number(vr?.currentVariant?.id || NaN);
    if (Number.isInteger(ceVar)) return ceVar;

    const urlVar = Number(new URL(location.href).searchParams.get('variant') || NaN);
    if (Number.isInteger(urlVar)) return urlVar;

    const hiddenId = Number(form.querySelector('input[type="hidden"][name="id"]')?.value || NaN);
    if (Number.isInteger(hiddenId)) return hiddenId;

    return NaN;
  }

  document.addEventListener('submit', function (evt) {
    const form = evt.target?.closest("form[action*='/cart/add']");
    if (!form) return;

    const variantId = resolveVariantId(form);
    if (!Number.isInteger(variantId)) return;

    let hid = form.querySelector('input[type="hidden"][name="id"]');
    if (!hid) {
      hid = document.createElement('input');
      hid.type = 'hidden';
      hid.name = 'id';
    }
    hid.value = String(variantId);
    if (form.firstChild !== hid) form.insertBefore(hid, form.firstChild);

    const radio = form.querySelector(`input[type="radio"][name="id"][value="${variantId}"]`);
    if (radio && !radio.checked) {
      radio.checked = true;
      radio.dispatchEvent(new Event('change', { bubbles: true }));
    }
  }, true);
})();
</script>



<script>
(function () {
  var lastQty = 1;
  var DEDUP_WINDOW_MS = 2000;

  // --- Logging helper ---
  function log(level, msg, obj) {
    var pfx = "[TW ATC]";
    try {
      if (obj !== undefined) console[level](pfx, msg, obj);
      else console[level](pfx, msg);
    } catch(_) {}
  }

  // --- Read qty robustly ---
  function readQty(form) {
    var el = form.querySelector("[name='quantity']");
    var v = el ? parseInt(el.value, 10) : NaN;

    if (!Number.isInteger(v) || v < 1) {
      var alt = form.querySelector(".product-quantity-section input[type='number'], .quantity input[type='number'], .quantity__input");
      v = alt ? parseInt(alt.value, 10) : NaN;
    }

    if (!Number.isInteger(v) || v < 1) v = lastQty;
    if (!Number.isInteger(v) || v < 1) v = 1;
    return v;
  }

  // Track qty changes
  document.addEventListener('input', function (e) {
    if (e.target.matches(
      "form[action*='/cart/add'] [name='quantity'], " +
      ".product-quantity-section input[type='number'], " +
      ".quantity input[type='number'], " +
      ".quantity__input"
    )) {
      var v = parseInt(e.target.value, 10);
      if (Number.isInteger(v) && v > 0) lastQty = v;
    }
  }, true);

  // --- Retry with exponential backoff for /cart.js ---
  function fetchCartWithRetry(maxTries) {
    var tries = 0;
    function attempt() {
      tries++;
      return fetch('/cart.js', { credentials: 'same-origin' })
        .then(function (r) {
          if (!r.ok) throw new Error("HTTP " + r.status);
          return r.json();
        })
        .catch(function (err) {
          if (tries < maxTries) {
            var delay = Math.min(1500, 200 * Math.pow(2, tries-1));
            log('warn', "cart.js failed (" + err + "). Retry in " + delay + "ms");
            return new Promise(function (res) { setTimeout(res, delay); }).then(attempt);
          }
          throw err;
        });
    }
    return attempt();
  }

  // --- Wait for TriplePixel (max 2s) ---
  function whenTriplePixelReady(cb) {
    var start = Date.now();
    (function poll() {
      if (typeof window.TriplePixel === 'function') return cb();
      if (Date.now() - start > 2000) {
        log('warn', 'TriplePixel not ready after 2s – proceeding with best effort');
        return cb();
      }
      setTimeout(poll, 100);
    })();
  }

  // --- Send ATC with fallback ---
  function sendATC(form) {
    try {
      var variantId = form.querySelector("[name='id']").value;
      var qty = readQty(form);

      whenTriplePixelReady(function () {
        fetchCartWithRetry(3)
          .then(function (cart) {
            var payload = { item: variantId, q: qty };
            if (cart && cart.token) payload.token = cart.token;
            log('debug', 'payload (with token if present):', payload);
            try { window.TriplePixel('AddToCart', payload); }
            catch (e) { log('error', 'TriplePixel call threw', e); }
          })
          .catch(function () {
            // Backup: send without token
            var payload = { item: variantId, q: qty };
            log('warn', 'cart.js unavailable – sending without token', payload);
            try { window.TriplePixel('AddToCart', payload); }
            catch (e) { log('error', 'TriplePixel call (no token) threw', e); }
          });
      });
    } catch (e) {
      log('warn', 'sendATC failed', e);
    }
  }

  // --- Deduplication + catch ALL /cart/add submits ---
  document.addEventListener('submit', function (evt) {
    var form = evt.target;
    if (!form || !form.matches("form[action*='/cart/add']")) return;

    var now = Date.now();
    if (form.__tw_last_fire__ && (now - form.__tw_last_fire__ < DEDUP_WINDOW_MS)) {
      return; // avoid double-fire
    }
    form.__tw_last_fire__ = now;

    sendATC(form);
  }, true);

})();
</script>


<script>
/**
 * Triple Whale Debug Harness + Correct ATC payload
 * Включение панели: добавить ?tw_debug=1 к URL (сохраняется в localStorage).
 * Отключение: ?tw_debug=0 или localStorage.removeItem('tw_debug');
 */
(function () {
  'use strict';

  // ====== ВКЛ/ВЫКЛ debug-панели по URL-параметру ======
  try {
    var qp = new URLSearchParams(location.search);
    if (qp.has('tw_debug')) {
      if (qp.get('tw_debug') === '1') localStorage.setItem('tw_debug', '1');
      else localStorage.removeItem('tw_debug');
    }
  } catch(_) {}

  var DEBUG_ON = localStorage.getItem('tw_debug') === '1';

  // ====== Мини-панель ======
  var ui = {
    box: null,
    add: function(row) {
      if (!DEBUG_ON) return;
      if (!ui.box) {
        ui.box = document.createElement('div');
        ui.box.setAttribute('id', 'tw-debug');
        ui.box.style.cssText = 'position:fixed;z-index:999999;right:10px;bottom:10px;width:360px;max-height:60vh;overflow:auto;background:#0b0f1a;color:#fff;font:12px/1.4 system-ui, -apple-system, Segoe UI, Roboto, Arial;border:1px solid #334;box-shadow:0 10px 25px rgba(0,0,0,.4);border-radius:10px';
        ui.box.innerHTML = '<div style="padding:8px 10px;border-bottom:1px solid #334;display:flex;align-items:center;gap:8px;"><strong style="font-size:12px;">Triple Whale Debug</strong><span style="opacity:.7;font-size:11px">(pxl + calls)</span><button id="tw-clear" style="margin-left:auto;background:#1e293b;color:#fff;border:0;border-radius:6px;padding:4px 8px;cursor:pointer">Clear</button></div><div id="tw-log"></div>';
        document.body.appendChild(ui.box);
        ui.box.querySelector('#tw-clear').onclick = function(){ var log = ui.box.querySelector('#tw-log'); if (log) log.innerHTML=''; };
      }
      var logWrap = ui.box.querySelector('#tw-log');
      var pre = document.createElement('pre');
      pre.style.cssText = 'margin:0;padding:8px 10px;border-bottom:1px solid #223;white-space:pre-wrap;word-break:break-word;background:#0e1424';
      pre.textContent = row;
      logWrap.insertBefore(pre, logWrap.firstChild);
    }
  };

  // ====== Утилиты ======
  function log(level) {
    var args = Array.prototype.slice.call(arguments, 1);
    try { console[level].apply(console, ['[TW DEBUG]'].concat(args)); } catch(_) {}
  }
  function safeJson(obj) {
    try { return JSON.stringify(obj, null, 2); } catch (e) { return String(obj); }
  }
  function nowISO() { return new Date().toISOString(); }

  // ====== 1) Перехват вызовов window.TriplePixel(...) ======
  (function wrapTriplePixel(){
    var tries = 0;
    (function wait(){
      if (typeof window.TriplePixel === 'function') {
        if (window.TriplePixel.__tw_wrapped) return;
        var orig = window.TriplePixel;
        window.TriplePixel = function(eventName, a, b) {
          var payload = (typeof a === 'object' && a) ? a : (typeof b === 'object' && b) ? b : null;
          var msg = nowISO() + '  CALL TriplePixel("' + eventName + '")\n' + (payload ? safeJson(payload) : '(no payload)');
          ui.add(msg);
          log('info', 'CALL TriplePixel', { event: eventName, payload: payload });
          return orig.apply(this, arguments);
        };
        window.TriplePixel.__tw_wrapped = true;
        log('info', 'TriplePixel wrapped for debug');
        if (DEBUG_ON) ui.add(nowISO() + '  TriplePixel wrapped');
      } else {
        if (tries++ < 50) return setTimeout(wait, 100);
        log('warn', 'TriplePixel not found (wrapping skipped)');
      }
    })();
  })();

  // ====== 2) Перехват сетевых отправок на pxl.triplewhale.com ======
  (function hookNetwork(){
    // sendBeacon
    if (navigator.sendBeacon && !navigator.sendBeacon.__tw_wrapped) {
      var origBeacon = navigator.sendBeacon.bind(navigator);
      navigator.sendBeacon = function(url, data) {
        try {
          if (typeof url === 'string' && url.indexOf('pxl.triplewhale.com') !== -1) {
            var bodyText = '';
            if (data instanceof Blob) {
              // Blob: попробуем прочитать
              var r = new FileReader();
              r.onload = function(){ ui.add(nowISO() + '  BEACON → ' + url + '\n' + r.result); log('info', 'BEACON', { url: url, body: r.result }); };
              try { r.readAsText(data); } catch(_) { ui.add(nowISO() + '  BEACON → ' + url + '  (Blob)'); }
            } else if (data instanceof FormData) {
              var obj = {};
              data.forEach(function(v,k){ obj[k] = v; });
              bodyText = safeJson(obj);
              ui.add(nowISO() + '  BEACON → ' + url + '\n' + bodyText);
              log('info', 'BEACON', { url: url, body: obj });
            } else if (data && typeof data === 'string') {
              ui.add(nowISO() + '  BEACON → ' + url + '\n' + data);
              log('info', 'BEACON', { url: url, body: data });
            } else {
              ui.add(nowISO() + '  BEACON → ' + url + '  (no readable body)');
              log('info', 'BEACON', { url: url, body: null });
            }
          }
        } catch(_) {}
        return origBeacon(url, data);
      };
      navigator.sendBeacon.__tw_wrapped = true;
    }

    // fetch
    if (window.fetch && !window.fetch.__tw_wrapped) {
      var origFetch = window.fetch.bind(window);
      window.fetch = function(input, init) {
        var url = (typeof input === 'string') ? input : (input && input.url) ? input.url : '';
        var isTW = typeof url === 'string' && url.indexOf('pxl.triplewhale.com') !== -1;
        var bodyClone = null;

        if (isTW) {
          try {
            var body = init && init.body;
            if (body && typeof body === 'string') bodyClone = body;
            else if (body instanceof URLSearchParams) bodyClone = body.toString();
            else if (body && typeof body === 'object') bodyClone = safeJson(body);
          } catch(_) {}
        }

        return origFetch(input, init).then(function(res){
          if (isTW) {
            ui.add(nowISO() + '  FETCH → ' + url + '\n' + (bodyClone || '(no readable body)') + '\nSTATUS: ' + res.status);
            log('info', 'FETCH', { url: url, body: bodyClone, status: res.status });
          }
          return res;
        });
      };
      window.fetch.__tw_wrapped = true;
    }
  })();

  // ====== 3) Исправленный и более «богатый» AddToCart ======
  // Рекомендации Triple Whale для ATC (документация):
  // TriplePixel('AddToCart', { item: '<product_id>', q: <qty>, v: '<variant_id>' });
  // см. KB: "Adding the Triple Pixel to a Headless Store or Custom Website"
  // https://kb.triplewhale.com/...  (раздел Add to Carts)
  function getQtyFromForm(form) {
    var el = form.querySelector("[name='quantity']");
    var v = el ? parseInt(el.value, 10) : NaN;
    if (!Number.isInteger(v) || v < 1) {
      var alt = form.querySelector(".product-quantity-section input[type='number'], .quantity input[type='number'], .quantity__input");
      v = alt ? parseInt(alt.value, 10) : NaN;
    }
    if (!Number.isInteger(v) || v < 1) v = 1;
    return v;
  }

  // Попытки достать productId:
  function resolveProductId(form) {
    // 1) data-атрибуты рядом с формой
    var host = form.closest('[data-product-id]') || form.closest('[data-product]');
    if (host) {
      var pid = host.getAttribute('data-product-id') || host.getAttribute('data-product');
      if (pid && /^\d+$/.test(pid)) return pid;
    }
    // 2) скрытые поля
    var hid = form.querySelector('[name="product-id"], [name="product_id"]');
    if (hid && /^\d+$/.test(hid.value)) return hid.value;
    // 3) ShopifyAnalytics мета
    try {
      var meta = window.ShopifyAnalytics && window.ShopifyAnalytics.meta;
      if (meta && meta.product && meta.product.id) return String(meta.product.id);
    } catch(_) {}
    // 4) TriplePixelData.product.id (если ты заполняешь его на PDP по гайду Triple Whale)
    try {
      if (window.TriplePixelData && window.TriplePixelData.product && window.TriplePixelData.product.id) {
        return String(window.TriplePixelData.product.id);
      }
    } catch(_) {}
    return null; // если не нашли — ок, отправим хотя бы v (variant)
  }

  function sendATCFromForm(form) {
    try {
      var variantIdInput = form.querySelector("[name='id']");
      if (!variantIdInput || !variantIdInput.value) return;

      var variantId = String(variantIdInput.value);
      var productId = resolveProductId(form);
      var qty = getQtyFromForm(form);

      var payload = { q: qty, v: variantId };
      if (productId) payload.item = productId;
      else payload.item = variantId; // fallback, если productId получить не удалось

      // Дополнительно можно добавить cart token — хорошо для связи с заказом
      // (не обязательно, но полезно, если доступен)
      fetch('/cart.js', { credentials: 'same-origin' })
        .then(function(r){ return r.ok ? r.json() : null; })
        .then(function(cart){
          if (cart && cart.token) payload.token = cart.token;
        })
        .catch(function(){ /* ignore */ })
        .finally(function(){
          // Вызов события
          if (typeof window.TriplePixel === 'function') {
            window.TriplePixel('AddToCart', payload);
          }
          // Дублируем в консоль/панель (на случай, если TW скрыт)
          ui.add(nowISO() + '  ATC payload →\n' + safeJson(payload));
          log('info', 'ATC payload', payload);
        });

    } catch (e) {
      log('warn', 'sendATCFromForm error', e);
    }
  }

  // Глобально ловим submit на /cart/add (не мешая твоему существующему коду)
  document.addEventListener('submit', function (evt) {
    var form = evt.target;
    if (!form || !form.matches("form[action*='/cart/add']")) return;
    // Отправим наш «зеркальный» ATC (для проверки данных)
    sendATCFromForm(form);
  }, true);

})();
</script>



<!--Convert Bundle Start-->
<script id="convert-bundle-loader" src="https://bundle.5gtb.com/loader.js?g_cvt_id=43d6a6b5-1dcc-4430-aaf9-153ca1c9a0bb"></script>
<!--Convert Bundle End-->


  </body>
</html>
